module.networking.azurerm_resource_group.labs-rg: Refreshing state... [id=/subscriptions/a305866f-c15a-4fab-8930-1a9c3c84dac6/resourceGroups/labs-rg]

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
  ~ update in-place

Terraform will perform the following actions:

  # module.networking.azurerm_resource_group.labs-rg will be updated in-place
  ~ resource "azurerm_resource_group" "labs-rg" {
        id       = "/subscriptions/a305866f-c15a-4fab-8930-1a9c3c84dac6/resourceGroups/labs-rg"
        name     = "labs-rg"
      ~ tags     = {
          + "CreatedBy"   = "Terraform"
          + "Environment" = "Dev"
          + "Project"     = "Labs"
        }
        # (1 unchanged attribute hidden)
    }

  # module.networking.azurerm_virtual_network.labs-vnet will be created
  + resource "azurerm_virtual_network" "labs-vnet" {
      + address_space       = [
          + "10.0.0.0/16",
        ]
      + dns_servers         = (known after apply)
      + guid                = (known after apply)
      + id                  = (known after apply)
      + location            = "northeurope"
      + name                = "labs-vnet"
      + resource_group_name = "labs-rg"
      + subnet              = (known after apply)
      + tags                = {
          + "CreatedBy"   = "Terraform"
          + "Environment" = "Dev"
          + "Project"     = "Labs"
        }
    }

Plan: 1 to add, 1 to change, 0 to destroy.

Changes to Outputs:
  + resource_group_id = "labs-rg"
  + vnet_id           = "labs-vnet"

─────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
